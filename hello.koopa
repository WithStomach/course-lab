decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

global @n_global = alloc i32, zeroinit
fun @select_sort(@A: *i32, @n: i32): i32{
%entry:
	%A = alloc *i32
	store @A, %A
	%n = alloc i32
	store @n, %n
	@i_0 = alloc i32
	@j_1 = alloc i32
	@min_2 = alloc i32
	store 0, @i_0
	jump %flag0
%flag0:
	%0 = load @i_0
	%1 = load %n
    %2 = sub %1, 1
    %3 = lt %0, %2
	br %3, %flag1, %flag2
%flag1:
	%4 = load @i_0
	store %4, @min_2
	%5 = load @i_0
    %6 = add %5, 1
	store %6, @j_1
	jump %flag3
%flag3:
	%7 = load @j_1
	%8 = load %n
    %9 = lt %7, %8
	br %9, %flag4, %flag5
%flag4:
	%10 = load @min_2
	%11 = load %A
	%12 = getptr %11, %10
	%13 = load %12
	%14 = load @j_1
	%15 = load %A
	%16 = getptr %15, %14
	%17 = load %16
    %18 = gt %13, %17
	br %18, %flag6, %flag7
%flag6:
	%19 = load @j_1
	store %19, @min_2
	jump %flag8
%flag7:
	jump %flag8
%flag8:
	%20 = load @j_1
    %21 = add %20, 1
	store %21, @j_1
	jump %flag3
%flag5:
	%22 = load @min_2
	%23 = load @i_0
    %24 = ne %22, %23
	br %24, %flag9, %flag10
%flag9:
	@tmp_3 = alloc i32
	%25 = load @min_2
	%26 = load %A
	%27 = getptr %26, %25
	%28 = load %27
	store %28, @tmp_3
	%29 = load @min_2
	%30 = load %A
	%31 = getptr %30, %29
	%32 = load @i_0
	%33 = load %A
	%34 = getptr %33, %32
	%35 = load %34
	store %35, %31
	%36 = load @i_0
	%37 = load %A
	%38 = getptr %37, %36
	%39 = load @tmp_3
	store %39, %38
	jump %flag11
%flag10:
	jump %flag11
%flag11:
	%40 = load @i_0
    %41 = add %40, 1
	store %41, @i_0
	jump %flag0
%flag2:
	ret 0
%flag12:
	ret
}
fun @main(): i32{
%entry:
	store 10, @n_global
	@a_0 = alloc [i32, 10]
	%0 = getelemptr @a_0, 0
	store 4, %0
	%1 = getelemptr @a_0, 1
	store 3, %1
	%2 = getelemptr @a_0, 2
	store 9, %2
	%3 = getelemptr @a_0, 3
	store 2, %3
	%4 = getelemptr @a_0, 4
	store 0, %4
	%5 = getelemptr @a_0, 5
	store 1, %5
	%6 = getelemptr @a_0, 6
	store 6, %6
	%7 = getelemptr @a_0, 7
	store 5, %7
	%8 = getelemptr @a_0, 8
	store 7, %8
	%9 = getelemptr @a_0, 9
	store 8, %9
	@i_1 = alloc i32
	store 0, @i_1
	%10 = getelemptr @a_0, 0
	%11 = load @n_global
	%12 = call @select_sort(%10, %11)
	store %12, @i_1
	jump %flag0
%flag0:
	%13 = load @i_1
	%14 = load @n_global
    %15 = lt %13, %14
	br %15, %flag1, %flag2
%flag1:
	@tmp_2 = alloc i32
	%16 = load @i_1
	%17 = getelemptr @a_0, %16
	%18 = load %17
	store %18, @tmp_2
	%19 = load @tmp_2
	call @putint(%19)
	store 10, @tmp_2
	%20 = load @tmp_2
	call @putch(%20)
	%21 = load @i_1
    %22 = add %21, 1
	store %22, @i_1
	jump %flag0
%flag2:
	ret 0
%flag3:
	ret
}
